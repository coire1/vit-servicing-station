openapi: 3.0.3

info:
  title: VIT as a Service Rest API
  description: Voting Implementation Testnet Rest API v0
  version: 0.2.0
  contact:
    url: "http://github.com/input-output-hk/vit-servicing-station"

servers:
  - url: "http://localhost"

paths:
  /api/v0/fund:
    get:
      summary: Get available fund
      responses:
        200:
          description: Valid response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fund"

  /api/v0/fund/{id}:
    get:
      summary: Get fund by id
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        200:
          description: Valid response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fund"
        404:
          description: The requested fund was not found

  /api/v0/proposals:
    get:
      summary: Get all available proposals
      responses:
        200:
          description: Valid response
          content:
            application/json:
              schema:
                items:
                $ref: "#/components/schemas/ProposalWithChallengeInfo"

  /api/v0/proposals/{id}:
    get:
      summary: Get proposal by id
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        200:
          description: Valid response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProposalWithChallengeInfo"
        404:
          description: The requested proposal was not found

  /api/v0/challenges:
    get:
      summary: Get all available challenges
      responses:
        200:
          description: Valid response
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Challenge"

  /api/v0/challenges/{id}:
    get:
      summary: Get challenge by id
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        200:
          description: Valid response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChallengeWithProposals"
        404:
          description: The requested challenge was not found

components:
  schemas:
    Fund:
      properties:
        id:
          type: integer
          format: int32
        fund_name:
          type: string
        fund_goal:
          type: string
        voting_power_info:
          type: string
        rewards_info:
          type: string
        fund_start_time:
          type: string
          format: date-time
        fund_end_time:
          type: string
          format: date-time
        next_fund_start_time:
          type: string
          format: date-time
        chain_vote_plans:
          type: array
          items:
            $ref: "#/components/schemas/VotePlan"
        challenges:
          type: array
          items:
            $ref: "#/components/schemas/Challenge"

    VotePlan:
      properties:
        id:
          type: integer
          format: int32
        chain_voteplan_id:
          type: string
          format: hash
        chain_vote_start_time:
          type: string
          format: date-time
        chain_vote_end_time:
          type: string
          format: date-time
        chain_committee_end_time:
          type: string
          format: date-time
        chain_voteplan_payload:
          type: string
        fund_id:
          type: integer
          format: int32

    Proposal:
      properties:
        internal_id:
          type: integer
          format: int32
        proposal_id:
          type: string
        proposal_category:
          type: object
          properties:
            category_id:
              type: string
            category_name:
              type: string
            category_description:
              type: string
        proposal_title:
          type: string
        proposal_summary:
          type: string
        proposal_public_key:
          type: string
          format: binary
        proposal_funds:
          type: integer
          format: int64
        proposal_url:
          type: string
        proposal_files:
          type: string
        proposer:
          type: object
          properties:
            proposer_name:
              type: string
            proposer_email:
              type: string
            proposer_url:
              type: string
        chain_proposal_id:
          type: string
        chain_proposal_index:
          type: integer
          format: int64
        chain_vote_options:
          description: Map[VoteOption; Index]
          type: object
        chain_voteplan_id:
          type: string
        chain_vote_start_time:
          type: string
          format: date-time
        chain_vote_end_time:
          type: string
          format: date-time
        chain_committee_end_time:
          type: string
          format: date-time
        chain_voteplan_payload:
          type: string

    ChallengeType:
      type: string
      enum:
        - simple
        - community-choice

    ProposalWithChallengeInfo:
      discriminator:
        propertyName: challenge_type
        mapping:
          simple: SimpleProposal
          community-choice: CommunityChoiceProposal
      allOf:
        - $ref: "#/components/schemas/Proposal"
        - type: object
          properties:
            fund_id:
              type: integer
              format: int32
            challenge_id:
              type: integer
              format: int32
            challenge_type:
              $ref: "#/components/schemas/ChallengeType"

    SimpleProposal:
      allOf:
        - $ref: "#/components/schemas/ProposalWithChallengeInfo"
        - type: object
          properties:
            proposal_solution:
              type: string
      example:
        {
          "internal_id": 22,
          "proposal_id": "4af0e6b3452cd4ee822b2ec1859fd57b5512f85c14875f408081aa9b796dfc6e",
          "proposal_title": "Authentication for DeepFake Defense",
          "proposal_summary": "Deepfake videos are dangerous.",
          "proposal_solution": "We will create a cryptographic proof on Cardano that verifies videos are real by connecting their blockchain ID.",
          "proposal_public_key": "Fvd8zI3DH85qnaChQE6Aymt1diMJP32LB0AdpheZh/Q=",
          "proposal_funds": 12000,
          "proposal_url": "http://ideascale.com/t/UM5UZBd2t",
          "proposal_files_url": "",
          "proposal_impact_score": 0,
          "proposer":
            {
              "proposer_name": "Community Member",
              "proposer_email": "example@vit.iohk.io",
              "proposer_url": "",
              "proposer_relevant_experience": "Cryptography student, website development, blockchain technologist.",
            },
          "chain_proposal_id": "4af0e6b3452cd4ee822b2ec1859fd57b5512f85c14875f408081aa9b796dfc6e",
          "chain_proposal_index": 0,
          "chain_vote_options": { "blank": 0, "yes": 1, "no": 2 },
          "chain_voteplan_id": "b1eeb620baf1445672f6c9422481aff0f6babaf775760d187a7703027e098166",
          "chain_vote_start_time": "2021-02-10T14:40:27+00:00",
          "chain_vote_end_time": "2021-02-11T10:10:27+00:00",
          "chain_committee_end_time": "2021-02-11T11:40:27+00:00",
          "chain_voteplan_payload": "public",
          "chain_vote_encryption_key": "",
          "fund_id": 20,
          "challenge_id": 2,
          "challenge_type": "simple",
        }

    CommunityChoiceProposal:
      allOf:
        - $ref: "#/components/schemas/ProposalWithChallengeInfo"
        - type: object
          properties:
            proposal_brief:
              type: string
            proposal_importance:
              type: string
            proposal_goal:
              type: string
            proposal_metrics:
              type: string
      example:
        {
          "internal_id": 31,
          "proposal_id": "494d8d685e3b195eb5610494f1721db7747df0517cb1b6a705bb3cebfef3c998",
          "proposal_title": "A for ADA Cryptoalphabet 4 children",
          "proposal_summary": "How to increase general awareness about Cardano and cryptocurrencies?\nHow to make fun community-building incentives?",
          "proposal_brief": "A for ADA",
          "proposal_importance": "We need to get them while they're young.",
          "proposal_goal": "Nebulous.",
          "proposal_metrics": "\\- Number of people engaged into the creation of Cryptoalphabet",
          "proposal_public_key": "zqUCWwguCt6+NHYjkpvasvccuA7l2SuabE+1C0bzf3Y=",
          "proposal_funds": 4800,
          "proposal_url": "http://ideascale.com/t/UM5UZBd1p",
          "proposal_files_url": "",
          "proposal_impact_score": 133,
          "proposer":
            {
              "proposer_name": "Community Member",
              "proposer_email": "example@vit.iohk.io",
              "proposer_url": "",
              "proposer_relevant_experience": "",
            },
          "chain_proposal_id": "494d8d685e3b195eb5610494f1721db7747df0517cb1b6a705bb3cebfef3c998",
          "chain_proposal_index": 9,
          "chain_vote_options": { "no": 2, "yes": 1, "blank": 0 },
          "chain_voteplan_id": "b1eeb620baf1445672f6c9422481aff0f6babaf775760d187a7703027e098166",
          "chain_vote_start_time": "2021-02-10T14:40:27+00:00",
          "chain_vote_end_time": "2021-02-11T10:10:27+00:00",
          "chain_committee_end_time": "2021-02-11T11:40:27+00:00",
          "chain_voteplan_payload": "public",
          "chain_vote_encryption_key": "",
          "fund_id": 20,
          "challenge_id": 1,
          "challenge_type": "community-choice",
        }

    Challenge:
      properties:
        id:
          type: integer
          format: int32
        challenge_type:
          $ref: "#/components/schemas/ChallengeType"
        title:
          type: string
        description:
          type: string
        rewards_total:
          type: integer
          format: int64
        fund_id:
          type: integer
          format: int32
        challenge_url:
          type: string

    ChallengeWithProposals:
      allOf:
        - $ref: "#/components/schemas/Challenge"
        - type: object
          properties:
            proposals:
              type: array
              items:
                $ref: "#/components/schemas/Proposal"
